// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OverwatchAPI.Models.EntityFramework;

#nullable disable

namespace OverwatchAPI.Migrations
{
    [DbContext(typeof(MapDBContext))]
    partial class MapDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("OverwatchAPI.Models.EntityFramework.Jouabilite", b =>
                {
                    b.Property<int>("PersonnageId")
                        .HasColumnType("integer")
                        .HasColumnName("perso_id");

                    b.Property<int>("MapId")
                        .HasColumnType("integer")
                        .HasColumnName("flm_id");

                    b.Property<int>("Note")
                        .HasColumnType("integer")
                        .HasColumnName("not_note");

                    b.HasKey("PersonnageId", "MapId")
                        .HasName("pk_not");

                    b.HasIndex("MapId");

                    b.ToTable("jouabilite");

                    b.HasCheckConstraint("ck_not_note", "not_note between 0 and 5");
                });

            modelBuilder.Entity("OverwatchAPI.Models.EntityFramework.Map", b =>
                {
                    b.Property<int>("MapId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("map_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MapId"));

                    b.Property<string>("Pays")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("map_pays");

                    b.Property<string>("Ville")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("map_ville");

                    b.HasKey("MapId")
                        .HasName("pk_flm");

                    b.ToTable("map");
                });

            modelBuilder.Entity("OverwatchAPI.Models.EntityFramework.Personnage", b =>
                {
                    b.Property<int>("PersonnageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("perso_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PersonnageId"));

                    b.Property<DateTime>("DateCreation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("perso_datecreation")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Nom")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("perso_nom");

                    b.Property<int>("Note")
                        .HasMaxLength(5)
                        .HasColumnType("integer")
                        .HasColumnName("perso_notediff");

                    b.Property<string>("Pays")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasDefaultValue("On sait pas")
                        .HasColumnName("perso_pays");

                    b.Property<string>("Prenom")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("perso_prenom");

                    b.HasKey("PersonnageId")
                        .HasName("pk_utl");

                    b.ToTable("personnage");
                });

            modelBuilder.Entity("OverwatchAPI.Models.EntityFramework.Jouabilite", b =>
                {
                    b.HasOne("OverwatchAPI.Models.EntityFramework.Map", "MapJouable")
                        .WithMany("JouabiliteMap")
                        .HasForeignKey("MapId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_jouable_map");

                    b.HasOne("OverwatchAPI.Models.EntityFramework.Personnage", "PersonnageJouable")
                        .WithMany("JouablePerso")
                        .HasForeignKey("PersonnageId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_jouable_perso");

                    b.Navigation("MapJouable");

                    b.Navigation("PersonnageJouable");
                });

            modelBuilder.Entity("OverwatchAPI.Models.EntityFramework.Map", b =>
                {
                    b.Navigation("JouabiliteMap");
                });

            modelBuilder.Entity("OverwatchAPI.Models.EntityFramework.Personnage", b =>
                {
                    b.Navigation("JouablePerso");
                });
#pragma warning restore 612, 618
        }
    }
}
